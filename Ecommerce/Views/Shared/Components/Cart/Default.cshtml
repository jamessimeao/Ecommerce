@using System.Data
@using Ecommerce.Data.Dapper
@using Ecommerce.Services
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject IDbConnection dbConnection

@model Tuple<bool,IEnumerable<Tuple<uint,Product>>>
@{
    bool createCheckoutButton;
    IEnumerable<Tuple<uint, Product>> detailedCart;
    (createCheckoutButton, detailedCart) = Model;
}


@if (SignInManager.IsSignedIn(User))
{
    <link rel="stylesheet" href="~/css/cart.css" />
    <h2>Carrinho</h2>

    int numberOfProducts = 0;
    Decimal totalPrice = 0;
    uint quantity;
    Product product;
    foreach (Tuple<uint, Product> tuple in detailedCart)
    {
        (quantity, product) = tuple;
        <div class="product">
            <img class="product-img" src="@product.ImagePath" alt="imagem do produto" width="100" />
            <p>
                @product.Name
            </p>
            <p>
                Preço unitário: R$@product.Price
            </p>
            <p>
                Quantidade: @quantity
            </p>
            <p>
                <button onclick="RemoveFromCart(@Json.Serialize(createCheckoutButton),@product.Id)">Remover</button>
            </p>
        </div>
        totalPrice += quantity * product.Price;
        numberOfProducts++;
    }
    @*Only enable Esvaziar carrinho and Finalizar compra buttons if there are items in the cart*@
    @if (numberOfProducts > 0)
    {
        <p class="total-price">
            Preço Total: R$@totalPrice
        </p>
        <p>
            <button onclick="RemoveCart()">Esvaziar carrinho</button>
        </p>

        if (createCheckoutButton)
        {
            <p>
                <form>
                    <button id="checkoutButton" type="submit" asp-controller="Home" asp-action="Checkout">Finalizar compra</button>
                </form>
            </p>
        }
    }
    else
    {
        <p>Carrinho vazio</p>
    }
}